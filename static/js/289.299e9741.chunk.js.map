{"version":3,"file":"static/js/289.299e9741.chunk.js","mappings":"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","sources":["page/chat/ChatWebSocket.tsx","webpack://my-app/./src/components/Users/User.module.css?05eb"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {useForm} from \"react-hook-form\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\nimport s from \"../../components/Users/User.module.css\";\nimport * as yup from \"yup\";\n\n\nconst ChatPage: React.FC<{}> = React.memo(props => {\n        return (\n            <div>\n                <Chat/>\n            </div>\n        )\n    }\n)\nconst Chat: React.FC = () => {\n\n    const [wsChanel, SetWSChannel] = useState<WebSocket | null>(null)\n    useEffect(() => {\n            let ws: WebSocket\n            const closeHandler = () => {\n                setTimeout(CreateWSConnection, 3000)\n            }\n\n            function CreateWSConnection() {\n                ws?.removeEventListener('close', closeHandler)\n                ws?.close()\n                ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\n                ws.addEventListener('close', closeHandler)\n                SetWSChannel(ws)\n            }\n\n            CreateWSConnection()\n            return () => {\n                ws.removeEventListener('close', closeHandler)\n                ws.close()\n            }\n        }, []\n    )\n\n\n    return (\n        <div>\n            <div style={{backgroundColor: 'lightgrey', padding: '10px'}}>\n                <ChatMessages wsChanel={wsChanel}/>\n            </div>\n            <AddMessageForm wsChanel={wsChanel}/>\n        </div>\n\n    )\n}\n\nconst ChatMessages: React.FC<{ wsChanel: WebSocket | null }> = ({wsChanel}) => {\n\n    const [ChatMessages, setChatMessages] = useState<ChatMessageType[]>([])\n\n    const messageHandler = (e: MessageEvent) => {\n        let newEntryChatMessages = JSON.parse(e.data)\n        setChatMessages((prevChatMessages) => [...prevChatMessages, ...newEntryChatMessages])\n    }\n\n    useEffect(() => {\n        wsChanel?.addEventListener('message', messageHandler)\n        return () => wsChanel?.removeEventListener('message', messageHandler)\n    }, [wsChanel])\n\n    return (\n        <div style={{overflowY: \"auto\", height: \"450px\"}}>\n            {ChatMessages.map((message: ChatMessageType, index: number) =>\n                <ChatMessage key={index} message={message}/>\n            )}\n        </div>\n\n    )\n}\nconst ChatMessage: React.FC<{ message: ChatMessageType }> = ({message}) => {\n\n    return (\n        <div>\n            <img src={message.photo} style={{width: '20px', height: '20px'}}/><b>{message.userName}</b>\n            <br/>\n            {message.message}\n            <hr/>\n        </div>\n\n    )\n}\n\n\nconst AddMessageForm: React.FC<{ wsChanel: WebSocket | null }> = ({wsChanel}) => {\n\n    const [isWSConnected, setConnectedWSStatus] = useState<boolean>(false)\n    const openHandler = () => setConnectedWSStatus(true)\n\n    useEffect(() => {\n        wsChanel?.addEventListener('open', openHandler)\n        return () => {\n            wsChanel?.removeEventListener('open', openHandler)\n        }\n    }, [wsChanel])\n\n\n    const schema = yup.object({\n        NewChatMessage: yup.string().max(100).required(),\n    })\n    const {\n        register, handleSubmit,\n        formState: {errors}, reset\n    } = useForm<{ NewChatMessage: string }>({\n        resolver: yupResolver(schema)\n    });\n    const onSubmit = (SubmitFormData: { NewChatMessage: string }) => {\n        if (!!SubmitFormData.NewChatMessage) {\n            wsChanel?.send(SubmitFormData.NewChatMessage)\n        }\n        reset()\n    }\n\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <textarea {...register(\"NewChatMessage\")} placeholder={\"New Chat Message\"}/>\n            <div><input type=\"submit\" disabled={!isWSConnected || wsChanel === null} value=\"Send Chat Message\"/></div>\n            <p className={s.error}>{errors.NewChatMessage?.message}</p>\n        </form>\n    )\n}\n\nexport default ChatPage\n\ntype ChatMessageType = {\n    message: string\n    photo: string\n    userId: number\n    userName: string\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"userFoto\":\"User_userFoto__houx+\",\"error\":\"User_error__SAXv6\"};"],"names":["ChatPage","React","props","_jsx","children","Chat","_useState","useState","_useState2","_slicedToArray","wsChanel","SetWSChannel","useEffect","ws","closeHandler","setTimeout","CreateWSConnection","_ws","_ws2","removeEventListener","close","WebSocket","addEventListener","_jsxs","style","backgroundColor","padding","ChatMessages","AddMessageForm","_ref","_useState3","_useState4","setChatMessages","messageHandler","e","newEntryChatMessages","JSON","parse","data","prevChatMessages","concat","_toConsumableArray","overflowY","height","map","message","index","ChatMessage","_ref2","src","photo","width","userName","_ref3","_errors$NewChatMessag","_useState5","_useState6","isWSConnected","setConnectedWSStatus","openHandler","schema","yup","NewChatMessage","max","required","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","reset","onSubmit","SubmitFormData","send","_objectSpread","placeholder","type","disabled","value","className","s","error"],"sourceRoot":""}