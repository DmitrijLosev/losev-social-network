{"version":3,"file":"static/js/311.a5233b1b.chunk.js","mappings":"0KACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAA2G,0B,UCA3G,GAAgB,UAAY,+B,SCa5B,EAVmB,SAACA,GAChB,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,OAASC,UACrBC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAI,YAAcP,EAAMQ,GAAGJ,SAAA,EAChCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,UAAaM,IAAK,wGACjCT,EAAMU,SAGvB,ECXA,GAAiB,ECWjB,EATgBC,EAAAA,MAAW,SAAAX,GAEvB,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,QAAUC,SACrBJ,EAAMY,SAEnB,I,6BCAIC,GAAYC,EAAAA,EAAAA,GAAiB,IAyCjC,EAxCgB,SAACd,GAGb,IAAIe,EAAkBf,EAAMgB,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAIlB,EAAAA,EAAAA,KAACmB,EAAU,CAAYZ,GAAIW,EAAEX,GAAIE,KAAMS,EAAET,MAAxBS,EAAEX,GAA6B,IAErGa,EAAmBrB,EAAMgB,YAAYM,SAASJ,KAAI,SAAAK,GAAC,OAAItB,EAAAA,EAAAA,KAACuB,EAAO,CAAYhB,GAAIe,EAAEf,GAAII,QAASW,EAAEX,SAA3BW,EAAEf,GAAmC,IAgBxGiB,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAK,WAAhBD,EAVL,SAAC1B,GACpB,OAAQK,EAAAA,EAAAA,MAAA,QAAMuB,SAAU5B,EAAM6B,aAAazB,SAAA,EAClC0B,EAAAA,EAAAA,IAAU,qBAAqB,aAAa,GAAGC,EAAAA,GAC5C,CAACC,EAAAA,EAASnB,GAAc,KAC5BZ,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,qBAIxB,IAIA,OACIC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAUC,SAAA,EACtBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,SAC1BW,KAELV,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAWC,SAAA,CACtBiB,GACDpB,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAACwB,EAAmB,CAACG,SAzBtB,SAACK,GACZjC,EAAMkC,WAAWD,EAASE,WAC9B,WA6BJ,E,mBClCA,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KARkB,SAACC,GACnB,MAAO,CACHtB,YAAasB,EAAMC,WAE3B,GAI6B,CAACL,WAAAA,EAAAA,IAC1BM,EAAAA,EAFJ,CAEsBC,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/DialogItem/DialogIdem.module.css?2a79","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__zqvbS\",\"dialogsItems\":\"Dialogs_dialogsItems__Mf0dj\",\"messages\":\"Dialogs_messages__I0vPn\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogava\":\"DialogIdem_dialogava__T3P70\"};","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './DialogIdem.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={\"/Dialogs/\" + props.id}>\r\n                <img className={s.dialogava} src ='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRB13YESkl_2gefSgE_NiufVwfDZksoS96wLg&usqp=CAU'></img>\r\n                {props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\nconst Message = React.memo(props => {\r\n\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}</div>\r\n    );\r\n}\r\n);\r\n\r\nexport default Message","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {FieldForm, Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nlet maxLength10=maxLengthCreator(10);\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let dialogsElements = props.dialogState.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>);\r\n\r\n    let messagesElements = props.dialogState.messages.map(m => <Message key={m.id} id={m.id} message={m.message}/>);\r\n\r\n    let onSubmit = (formData) => {\r\n        props.addMessage(formData.NewMessage);\r\n    };\r\n\r\n    const NewMessageForm = (props) => {\r\n        return (<form onSubmit={props.handleSubmit}>\r\n                {FieldForm('Enter your message','NewMessage','',Textarea,\r\n                    [required,maxLength10 ],'')}\r\n                <div>\r\n                    <button>Send message</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n    const NewMessageReduxForm = reduxForm({form:'Message'})(NewMessageForm)\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <div>\r\n                    <NewMessageReduxForm onSubmit={onSubmit}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport {addMessage} from '../../Redux/Dialogs-reducer';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from 'react-redux'\r\nimport {withAuthNavigate} from \"../../HOC/withAuthNavigate\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogState: state.DialogPage\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthNavigate)(Dialogs)\r\n"],"names":["props","_jsx","className","s","children","_jsxs","NavLink","to","id","src","name","React","message","maxLength10","maxLengthCreator","dialogsElements","dialogState","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","NewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","FieldForm","Textarea","required","formData","addMessage","NewMessage","compose","connect","state","DialogPage","withAuthNavigate","Dialogs"],"sourceRoot":""}