{"version":3,"file":"static/js/618.02fb0006.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Common/Paginator/Paginator.module.css?308c","components/Common/Paginator/Paginator.tsx","webpack://my-app/./src/components/Users/User.module.css?05eb","components/Users/User.tsx","components/Users/UsersUseFormChanger.tsx","Redux/Users-selectors.ts","components/Users/Users.tsx","components/Users/UsersPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selected\":\"Paginator_selected__ubo3c\",\"pagenumber\":\"Paginator_pagenumber__NHRle\",\"paginator\":\"Paginator_paginator__ThrKA\"};","import React, {useState} from \"react\";\r\nimport s from './Paginator.module.css'\r\n\r\n\r\ntype Props={\r\n    totalItemsCount:number\r\n    pageSize:number\r\n    currentPage:number\r\n    onPageChanged:(pageNumber:number)=>void\r\n    portionSize?:number\r\n}\r\n\r\nconst Paginator:React.FC<Props> =\r\n    ({totalItemsCount,pageSize,currentPage,onPageChanged,portionSize=15}) => {\r\n\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages:Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let [portionNumber,setPortionNumber]=useState(1)\r\n    let portionCount=Math.ceil(totalItemsCount/portionSize);\r\n    let leftPortionElementNumber= portionSize * (portionNumber - 1)+1;\r\n    let lastPortionElementNumber= portionSize * portionNumber;\r\n\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber>=2 && <button onClick={()=>{setPortionNumber(1)}}>First Page</button>}\r\n        {portionNumber>1 && <button onClick={()=>{setPortionNumber(portionNumber-1)}}>Preview Page</button>}\r\n        {pages.filter(p=>p>=leftPortionElementNumber && p<=lastPortionElementNumber)\r\n            .map(p => {\r\n                return <span key={p} className={`${s.pagenumber} ${currentPage === p ? s.selected : ''}`}\r\n                             onClick={() => {\r\n                                 onPageChanged(p)\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionNumber<portionCount && <button onClick={()=>{setPortionNumber(portionNumber+1)}}>\r\n            Next Page</button>}\r\n        </div>\r\n}\r\n\r\n\r\nexport default Paginator;","// extracted by mini-css-extract-plugin\nexport default {\"userFoto\":\"User_userFoto__houx+\",\"error\":\"User_error__SAXv6\"};","import {NavLink} from \"react-router-dom\";\r\nimport UsersPhoto from \"../../assets/images/Users.png\";\r\nimport s from \"./User.module.css\";\r\nimport React from \"react\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\ntype Props={\r\n    user:UserType\r\n    followingInProgress:Array<number>\r\n    onFollowUser:(id:number)=>void\r\n    onUnfollowUser:(id:number)=>void\r\n}\r\nexport const User:React.FC<Props> = ({user, followingInProgress, onFollowUser, onUnfollowUser}) => {\r\n    return <div>\r\n               <span>\r\n                   <div>\r\n                       <NavLink to={\"/profile/\" + user.id}>\r\n                       <img src={user.photos.small != null ? user.photos.small : UsersPhoto} className={s.userFoto}\r\n                            alt={'Photo did not find'}/>\r\n                   </NavLink>\r\n                   </div>\r\n                   <div>\r\n                   {user.followed ?\r\n                       <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                           onFollowUser(user.id)\r\n                       }}>Unfollow</button> :\r\n                       <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                           onUnfollowUser(user.id);\r\n                       }}>Follow</button>}\r\n\r\n               </div>\r\n               </span>\r\n        <span>\r\n                   <div>\r\n                   USER NAME:{user.name}\r\n               </div>\r\n             <div>\r\n                   USER ID:{user.id}\r\n               </div>\r\n                   <div>\r\n                   {!user.status ? 'NO STATUS' : 'STATUS:  '+ user.status}\r\n               </div></span>\r\n        <span>\r\n               </span>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport s from \"./User.module.css\"\r\nimport {FilterType} from \"../../Redux/Users-reducer\";\r\n\r\n\r\ntype Props = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n    values:SubmitFormType\r\n}\r\ntype SubmitFormType = yup.InferType<typeof schema>\r\n\r\nconst schema = yup.object({\r\n    searchName: yup.string().max(20).default(''),\r\n    UsersShowProperty: yup.string().required().nullable()\r\n})\r\n\r\nexport const UsersUseFormChanger: React.FC<Props> = React.memo(props => {\r\nconst {values,onFilterChanged}=props;\r\n\r\n    const {register, handleSubmit,\r\n        formState: {errors}\r\n    } = useForm<SubmitFormType>({\r\n            resolver: yupResolver(schema),\r\n            defaultValues: {\r\n                searchName: values.searchName,\r\n                UsersShowProperty: values.UsersShowProperty\r\n            },\r\n        values\r\n        },);\r\n    const onSubmit = (SubmitFormData: SubmitFormType) => {\r\n        const term = SubmitFormData.searchName;\r\n        const friend = SubmitFormData.UsersShowProperty === \"true\" ? true :\r\n            SubmitFormData.UsersShowProperty === \"false\" ? false : null\r\n        onFilterChanged({term: term, friend: friend})\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input {...register(\"searchName\")} placeholder={\"Entry Name of search user\"}/>\r\n            <select {...register(\"UsersShowProperty\")} >\r\n                <option value=\"null\">Show all users</option>\r\n                <option value=\"true\">Show followed users</option>\r\n                <option value=\"false\">Show unfollowed users</option>\r\n            </select>\r\n            <input type=\"submit\" value=\"Accept Searching Property\"/>\r\n            <p className={s.error}>{errors.searchName?.message}</p>\r\n            <p className={s.error}>{errors.UsersShowProperty?.message}</p>\r\n        </form>\r\n    )\r\n})\r\n\r\n\r\n\r\n","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const getUsersSelector=(state:AppStateType)=>{ return state.UsersPage.users}\r\nexport const getPageSizeSelector=(state:AppStateType)=>{ return state.UsersPage.pageSize}\r\nexport const getTotalUsersCountSelector=(state:AppStateType)=>{ return state.UsersPage.totalUsersCount}\r\nexport const getCurrentPageSelector=(state:AppStateType)=>{ return state.UsersPage.currentPage}\r\nexport const getFollowingInProgressSelector=(state:AppStateType)=>{ return state.UsersPage.followingInProgress}\r\nexport const getIsFetchingSelector=(state:AppStateType)=>{ return state.UsersPage.isFetching}\r\nexport const getFilterSelector=(state:AppStateType)=>{ return state.UsersPage.filter}\r\n","import React, {useEffect} from \"react\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\nimport {UsersUseFormChanger} from \"./UsersUseFormChanger\";\r\nimport {ActionsType, FilterType, followUser, getUsers, unfollowUser} from \"../../Redux/Users-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getCurrentPageSelector,\r\n    getFilterSelector,\r\n    getFollowingInProgressSelector,\r\n    getPageSizeSelector,\r\n    getTotalUsersCountSelector,\r\n    getUsersSelector\r\n} from \"../../Redux/Users-selectors\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport {NumberParam, StringParam, useQueryParam} from \"use-query-params\";\r\n\r\n\r\n\r\n\r\nexport const Users: React.FC = (props) => {\r\n\r\n    const totalUsersCount = useSelector(getTotalUsersCountSelector)\r\n    const pageSize = useSelector(getPageSizeSelector)\r\n    const currentPage = useSelector(getCurrentPageSelector)\r\n    const users = useSelector(getUsersSelector)\r\n    const followingInProgress = useSelector(getFollowingInProgressSelector)\r\n    const filter = useSelector(getFilterSelector)\r\n    const dispatch =\r\n        useDispatch<ThunkDispatch<AppStateType, unknown, ActionsType>>();\r\n    const navigate = useNavigate();\r\n    const location=useLocation();\r\n    const valuesForForm={searchName:filter.term,UsersShowProperty: String(filter.friend)}\r\n    const [term, setTerm]=useQueryParam(\"term\",StringParam)\r\n    const [friend, setFriend]=useQueryParam(\"friend\",StringParam)\r\n    const [page, setPage]=useQueryParam(\"page\",NumberParam)\r\n\r\n    useEffect(() => {\r\n\r\n        let actualPage=!!page ? page : currentPage;\r\n        let actualFilter=filter;\r\n        if (!!term) actualFilter={...actualFilter,term:term};\r\n        if (!!friend) actualFilter={...actualFilter,friend:friend === \"true\" ? true :\r\n                friend === \"false\" ? false : null}\r\n        dispatch(getUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (filter.term===\"\") {setTerm(undefined)} else {setTerm(filter.term)}\r\n        setFriend(String(filter.friend))\r\n        setPage(currentPage)\r\n    }, [filter,currentPage])\r\n\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(getUsers(pageNumber, pageSize, filter))\r\n    }\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(getUsers(1, pageSize, filter))\r\n    }\r\n    const onFollowUser = (userId: number) => {\r\n        dispatch(followUser(userId))\r\n    }\r\n    const onUnfollowUser = (userId: number) => {\r\n        dispatch(unfollowUser(userId))\r\n    }\r\n\r\n    return <div>\r\n        <div><UsersUseFormChanger onFilterChanged={onFilterChanged} values={valuesForForm}/></div>\r\n        <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize}\r\n                   currentPage={currentPage} onPageChanged={onPageChanged}/>\r\n\r\n        {users.map(user => <User key={user.id} user={user} followingInProgress={followingInProgress}\r\n                                 onFollowUser={onFollowUser} onUnfollowUser={onUnfollowUser}/>)}\r\n    </div>\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Users} from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {getIsFetchingSelector} from \"../../Redux/Users-selectors\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nconst UsersPage: React.FC = (props) => {\r\n    let isAuth = useSelector\r\n    ((state: AppStateType) => state.auth.isAuth)\r\n    let isFetching = useSelector(getIsFetchingSelector)\r\n    return( <div>\r\n        {!isAuth&&<Navigate to={\"/login\"}/>}\r\n        {isFetching&&<Preloader/>}\r\n        <Users />\r\n        </div> )\r\n    }\r\nexport default UsersPage"],"names":["_ref","totalItemsCount","pageSize","currentPage","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","_useState","useState","_useState2","_slicedToArray","portionNumber","setPortionNumber","portionCount","leftPortionElementNumber","lastPortionElementNumber","_jsxs","className","s","children","_jsx","onClick","filter","p","map","concat","User","user","followingInProgress","onFollowUser","onUnfollowUser","NavLink","to","id","src","photos","small","UsersPhoto","alt","followed","disabled","some","name","status","schema","yup","searchName","max","default","UsersShowProperty","required","nullable","UsersUseFormChanger","React","props","_errors$searchName","_errors$UsersShowProp","values","onFilterChanged","_useForm","useForm","resolver","yupResolver","defaultValues","register","handleSubmit","errors","formState","onSubmit","SubmitFormData","term","friend","_objectSpread","placeholder","value","type","message","getUsersSelector","state","UsersPage","users","getPageSizeSelector","getTotalUsersCountSelector","totalUsersCount","getCurrentPageSelector","getFollowingInProgressSelector","getIsFetchingSelector","isFetching","getFilterSelector","Users","useSelector","dispatch","useDispatch","valuesForForm","useNavigate","useLocation","String","_useQueryParam","useQueryParam","StringParam","_useQueryParam2","setTerm","_useQueryParam3","_useQueryParam4","setFriend","_useQueryParam5","NumberParam","_useQueryParam6","page","setPage","useEffect","actualPage","actualFilter","getUsers","undefined","userId","followUser","unfollowUser","Paginator","pageNumber","isAuth","auth","Navigate","Preloader"],"sourceRoot":""}