{"version":3,"file":"static/js/633.a47ea4d6.chunk.js","mappings":"yKACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAA2G,0B,UCA3G,EAA4B,8B,SCe5B,EAX0C,SAACA,GACvC,OACIC,EAAAA,EAAAA,KAAA,OAAAC,UACIC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAI,YAAcL,EAAMM,GAAGJ,SAAA,EAChCD,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EACXC,IAAI,wGACRT,EAAMU,SAGvB,ECAA,EAVuCC,EAAAA,MAAW,SAAAX,GAE9C,OACIC,EAAAA,EAAAA,KAAA,OAAAC,SACKF,EAAMY,SAGnB,I,6BCCIC,GAAYC,EAAAA,EAAAA,GAAiB,IA2CjC,EA1CqE,SAACd,GAGlE,IAAIe,EACAf,EAAMgB,YAAYC,QAAQC,KAAI,SAACC,GAAa,OAAKlB,EAAAA,EAAAA,KAACmB,EAAU,CAAYd,GAAIa,EAAEb,GAAII,KAAMS,EAAET,MAAxBS,EAAEb,GAA6B,IAEjGe,EACErB,EAAMgB,YAAYM,SAASJ,KAAI,SAACK,GAAc,OAAKtB,EAAAA,EAAAA,KAACuB,EAAO,CAAYlB,GAAIiB,EAAEjB,GAAIM,QAASW,EAAEX,SAA3BW,EAAEjB,GAAmC,IAgBtGmB,GAAsBC,EAAAA,EAAAA,GAA2B,CAACC,KAAK,WAAjCD,EAVwC,SAAC1B,GACjE,OAAQG,EAAAA,EAAAA,MAAA,QAAMyB,SAAU5B,EAAM6B,aAAa3B,SAAA,EAClC4B,EAAAA,EAAAA,IAAiC,qBAAqB,aAAa,GAAGC,EAAAA,GACnE,CAACC,EAAAA,EAASnB,GAAc,KAC5BZ,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,qBAIxB,IAIA,OACIC,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAUN,SAAA,EACtBD,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAeN,SAC1Ba,KAELZ,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAWN,SAAA,CACtBmB,GACDpB,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAACwB,EAAmB,CAACG,SAzBtB,SAACK,GACZjC,EAAMkC,WAAWD,EAASE,WAC9B,WA6BJ,E,oBChCA,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KARkB,SAACC,GACnB,MAAO,CACHtB,YAAasB,EAAMC,WAE3B,GAKQ,CAACL,WAAWM,EAAAA,EAAQN,aACxBO,EAAAA,EAHJ,CAGsBC,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/DialogItem/DialogIdem.module.css?2a79","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__zqvbS\",\"dialogsItems\":\"Dialogs_dialogsItems__Mf0dj\",\"messages\":\"Dialogs_messages__I0vPn\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogava\":\"DialogIdem_dialogava__T3P70\"};","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './DialogIdem.module.css'\r\nimport {DialogsType} from \"../../../types/types\";\r\n\r\nconst DialogItem: React.FC<DialogsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <NavLink to={\"/Dialogs/\" + props.id}>\r\n                <img className={s.dialogava}\r\n                     src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRB13YESkl_2gefSgE_NiufVwfDZksoS96wLg&usqp=CAU'></img>\r\n                {props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport s from './Message.module.css'\r\nimport {MessagesType} from \"../../../types/types\";\r\n\r\nconst Message:React.FC<MessagesType> = React.memo(props => {\r\n\r\n    return (\r\n        <div>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n);\r\n\r\nexport default Message","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {FieldForm, Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {DialogsType, MessagesType} from \"../../types/types\";\r\nimport {DispatchStatePropsType, MapStatePropsType} from \"./DialogsContainer\";\r\n\r\n\r\n\r\nlet maxLength10=maxLengthCreator(10);\r\nconst Dialogs:React.FC<MapStatePropsType & DispatchStatePropsType> = (props) => {\r\n\r\n\r\n    let dialogsElements =\r\n        props.dialogState.dialogs.map((d:DialogsType) => <DialogItem key={d.id} id={d.id} name={d.name}/>);\r\n\r\n    let messagesElements\r\n        = props.dialogState.messages.map((m:MessagesType) => <Message key={m.id} id={m.id} message={m.message}/>);\r\n\r\n    let onSubmit = (formData:MessageFormType) => {\r\n        props.addMessage(formData.NewMessage);\r\n    };\r\n\r\n    const NewMessageForm:React.FC<InjectedFormProps<MessageFormType>> = (props) => {\r\n        return (<form onSubmit={props.handleSubmit}>\r\n                {FieldForm<keyof MessageFormType>('Enter your message','NewMessage','',Textarea,\r\n                    [required,maxLength10 ],'')}\r\n                <div>\r\n                    <button>Send message</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n    const NewMessageReduxForm = reduxForm<MessageFormType>({form:'Message'})(NewMessageForm)\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <div>\r\n                    <NewMessageReduxForm onSubmit={onSubmit}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs\r\n\r\ntype MessageFormType={NewMessage:string}","import React, {ComponentType} from \"react\"\r\nimport {actions, InitialStateType} from '../../Redux/Dialogs-reducer';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from 'react-redux'\r\nimport {withAuthNavigate} from \"../../HOC/withAuthNavigate\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\n\r\nexport type DispatchStatePropsType={\r\n    addMessage:(NewMessage:string)=>void\r\n}\r\nexport type MapStatePropsType={\r\n    dialogState:InitialStateType\r\n}\r\nlet mapStateToProps = (state:AppStateType):MapStatePropsType => {\r\n    return {\r\n        dialogState: state.DialogPage\r\n    }\r\n}\r\n\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType,DispatchStatePropsType,{},AppStateType>(mapStateToProps,\r\n        {addMessage:actions.addMessage}),\r\n    withAuthNavigate)(Dialogs)\r\n"],"names":["props","_jsx","children","_jsxs","NavLink","to","id","className","s","src","name","React","message","maxLength10","maxLengthCreator","dialogsElements","dialogState","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","NewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","FieldForm","Textarea","required","formData","addMessage","NewMessage","compose","connect","state","DialogPage","actions","withAuthNavigate","Dialogs"],"sourceRoot":""}