{"version":3,"file":"static/js/859.d6df8bcf.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Common/Paginator/Paginator.module.css?308c","components/Common/Paginator/Paginator.tsx","webpack://my-app/./src/components/Users/User.module.css?05eb","components/Users/User.tsx","components/Users/UsersUseFormChanger.tsx","components/Users/Users.tsx","Redux/Users-selectors.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selected\":\"Paginator_selected__ubo3c\",\"pagenumber\":\"Paginator_pagenumber__NHRle\",\"paginator\":\"Paginator_paginator__ThrKA\"};","import React, {useState} from \"react\";\r\nimport s from './Paginator.module.css'\r\n\r\n\r\ntype Props={\r\n    totalItemsCount:number\r\n    pageSize:number\r\n    currentPage:number\r\n    onPageChanged:(pageNumber:number)=>void\r\n    portionSize?:number\r\n}\r\n\r\nconst Paginator:React.FC<Props> =\r\n    ({totalItemsCount,pageSize,currentPage,onPageChanged,portionSize=15}) => {\r\n\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages:Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let [portionNumber,setPortionNumber]=useState(1)\r\n    let portionCount=Math.ceil(totalItemsCount/portionSize);\r\n    let leftPortionElementNumber= portionSize * (portionNumber - 1)+1;\r\n    let lastPortionElementNumber= portionSize * portionNumber;\r\n\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber>=2 && <button onClick={()=>{setPortionNumber(1)}}>First Page</button>}\r\n        {portionNumber>1 && <button onClick={()=>{setPortionNumber(portionNumber-1)}}>Preview Page</button>}\r\n        {pages.filter(p=>p>=leftPortionElementNumber && p<=lastPortionElementNumber)\r\n            .map(p => {\r\n                return <span key={p} className={`${s.pagenumber} ${currentPage === p ? s.selected : ''}`}\r\n                             onClick={() => {\r\n                                 onPageChanged(p)\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionNumber<portionCount && <button onClick={()=>{setPortionNumber(portionNumber+1)}}>\r\n            Next Page</button>}\r\n        </div>\r\n}\r\n\r\n\r\nexport default Paginator;","// extracted by mini-css-extract-plugin\nexport default {\"userFoto\":\"User_userFoto__houx+\",\"error\":\"User_error__SAXv6\"};","import {NavLink} from \"react-router-dom\";\r\nimport UsersPhoto from \"../../assets/images/Users.png\";\r\nimport s from \"./User.module.css\";\r\nimport React from \"react\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\ntype Props={\r\n    user:UserType\r\n    followingInProgress:Array<number>\r\n    followUser:(id:number)=>void\r\n    unfollowUser:(id:number)=>void\r\n}\r\nconst User:React.FC<Props> = ({user, followingInProgress, followUser, unfollowUser}) => {\r\n    return <div>\r\n               <span>\r\n                   <div>\r\n                       <NavLink to={\"/profile/\" + user.id}>\r\n                       <img src={user.photos.small != null ? user.photos.small : UsersPhoto} className={s.userFoto}\r\n                            alt={'Photo did not find'}/>\r\n                   </NavLink>\r\n                   </div>\r\n                   <div>\r\n                   {user.followed ?\r\n                       <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                           followUser(user.id)\r\n                       }}>Unfollow</button> :\r\n                       <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                           unfollowUser(user.id);\r\n                       }}>Follow</button>}\r\n\r\n               </div>\r\n               </span>\r\n        <span>\r\n                   <div>\r\n                   USER NAME:{user.name}\r\n               </div>\r\n             <div>\r\n                   USER ID:{user.id}\r\n               </div>\r\n                   <div>\r\n                   {!user.status ? 'NO STATUS' : 'STATUS:  '+ user.status}\r\n               </div></span>\r\n        <span>\r\n               </span>\r\n    </div>\r\n}\r\nexport default User;","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport s from \"./User.module.css\"\r\n\r\ntype Props={\r\n    setUsersSearchParams: (term: string, friend: boolean | null) =>void\r\n}\r\ntype SubmitFormType=yup.InferType<typeof schema>\r\n\r\nconst schema = yup.object({\r\n    searchName: yup.string().max(20).default(''),\r\n    UsersShowProperty:yup.string().required()})\r\n\r\nconst UsersUseFormChanger:React.FC<Props> = (props) => {\r\n\r\n\r\n    const {register, handleSubmit,\r\n        formState:{ errors }} =\r\n        useForm<SubmitFormType>({\r\n            resolver: yupResolver(schema)\r\n        });\r\n    const onSubmit = (SubmitFormData:SubmitFormType) => {\r\n        const term=SubmitFormData.searchName;\r\n        const friend=SubmitFormData.UsersShowProperty===\"true\" ? true :\r\n            SubmitFormData.UsersShowProperty===\"false\" ? false : null\r\n        props.setUsersSearchParams(term,friend)\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input {...register(\"searchName\")} placeholder={\"Entry Name of search user\"} />\r\n            <select {...register(\"UsersShowProperty\")} >\r\n                <option value=\"null\">Show all users</option>\r\n                <option value=\"true\">Show followed users</option>\r\n                <option value=\"false\">Show unfollowed users</option>\r\n            </select>\r\n            <input type=\"submit\"  value=\"Accept Searching Property\"/>\r\n            <p className={s.error}>{errors.searchName?.message}</p>\r\n            <p className={s.error}>{errors.UsersShowProperty?.message}</p>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default UsersUseFormChanger;\r\n","import React from \"react\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport {UserType} from \"../../types/types\";\r\nimport UsersUseFormChanger from \"./UsersUseFormChanger\";\r\n\r\ntype Props={\r\n    totalUsersCount:number\r\n    pageSize:number\r\n    currentPage:number\r\n    onPageChanged:(pageNumber:number)=>void\r\n    users:Array<UserType>\r\n    followingInProgress:Array<number>\r\n    followUser:(id:number)=>void\r\n    unfollowUser:(id:number)=>void\r\n    setUsersSearchParams: (term: string, friend: boolean | null) =>void\r\n}\r\n\r\n\r\nlet Users:React.FC<Props> = (props) => { return <div>\r\n    <div><UsersUseFormChanger setUsersSearchParams={props.setUsersSearchParams}/> </div>\r\n        <Paginator totalItemsCount={props.totalUsersCount} pageSize={props.pageSize}\r\n                   currentPage={props.currentPage} onPageChanged={props.onPageChanged}/>\r\n\r\n        {props.users.map(user => <User key={user.id} user={user} followingInProgress={props.followingInProgress}\r\n                                       followUser={props.followUser} unfollowUser={props.unfollowUser}/>)}\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users;","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const getUsersSelector=(state:AppStateType)=>{ return state.UsersPage.users}\r\nexport const getPageSizeSelector=(state:AppStateType)=>{ return state.UsersPage.pageSize}\r\nexport const getTotalUsersCountSelector=(state:AppStateType)=>{ return state.UsersPage.totalUsersCount}\r\nexport const getCurrentPageSelector=(state:AppStateType)=>{ return state.UsersPage.currentPage}\r\nexport const getFollowingInProgressSelector=(state:AppStateType)=>{ return state.UsersPage.followingInProgress}\r\nexport const getIsFetchingSelector=(state:AppStateType)=>{ return state.UsersPage.isFetching}\r\nexport const getFriendSelector=(state:AppStateType)=>{ return state.UsersPage.friend}\r\nexport const getTermSelector=(state:AppStateType)=>{ return state.UsersPage.term}\r\n","import React, {ComponentType} from \"react\";\r\nimport {actions, followUser, getUsers, unfollowUser} from \"../../Redux/Users-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {withAuthNavigate} from \"../../HOC/withAuthNavigate\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPageSelector, getFollowingInProgressSelector, getFriendSelector, getIsFetchingSelector,\r\n    getPageSizeSelector, getTermSelector,\r\n    getTotalUsersCountSelector,\r\n    getUsersSelector\r\n} from \"../../Redux/Users-selectors\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\n\r\ntype MapPropsType=ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType={\r\n    getUsers:(currentPage:number,pageSize:number,term:string,friend:boolean | null)=>void\r\n    followUser:(id:number)=>void\r\n    unfollowUser:(id:number)=>void\r\n    setUsersSearchParams: (term: string, friend: boolean | null) =>void\r\n}\r\n\r\n\r\ntype PropsType=MapPropsType & DispatchPropsType\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n\r\n    componentDidMount() {\r\n        let {currentPage,pageSize,term, friend, getUsers}=this.props;\r\n        getUsers(currentPage,pageSize,term,friend)};\r\n\r\n    onPageChanged = (pageNumber:number) => {\r\n        let {getUsers,pageSize,term, friend}=this.props;\r\n        getUsers(pageNumber,pageSize,term,friend)}\r\n    componentDidUpdate(prevProps: PropsType) {\r\n        let {getUsers,pageSize,term, friend}=this.props;\r\n        if (prevProps.term!==this.props.term || prevProps.friend!==this.props.friend) {\r\n            getUsers(1,pageSize,term,friend)}\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users {...this.props}\r\n                   onPageChanged={this.onPageChanged}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state:AppStateType) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        totalUsersCount: getTotalUsersCountSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        followingInProgress: getFollowingInProgressSelector(state),\r\n        isFetching:getIsFetchingSelector(state),\r\n        friend:getFriendSelector(state),\r\n        term:getTermSelector(state)\r\n    }\r\n}\r\nexport default compose<ComponentType>(\r\n        withAuthNavigate,\r\n    connect<MapPropsType,DispatchPropsType, {},AppStateType>\r\n    (mapStateToProps, {getUsers,followUser,\r\n        unfollowUser,setUsersSearchParams:actions.setUsersSearchParams}))(UsersContainer);"],"names":["_ref","totalItemsCount","pageSize","currentPage","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","_useState","useState","_useState2","_slicedToArray","portionNumber","setPortionNumber","portionCount","leftPortionElementNumber","lastPortionElementNumber","_jsxs","className","s","children","_jsx","onClick","filter","p","map","concat","user","followingInProgress","followUser","unfollowUser","NavLink","to","id","src","photos","small","UsersPhoto","alt","followed","disabled","some","name","status","schema","yup","searchName","max","default","UsersShowProperty","required","props","_errors$searchName","_errors$UsersShowProp","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","SubmitFormData","term","friend","setUsersSearchParams","_objectSpread","placeholder","value","type","message","UsersUseFormChanger","Paginator","totalUsersCount","users","User","getUsersSelector","state","UsersPage","getPageSizeSelector","getTotalUsersCountSelector","getCurrentPageSelector","getFollowingInProgressSelector","getIsFetchingSelector","isFetching","getFriendSelector","getTermSelector","UsersContainer","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","pageNumber","_this$props","getUsers","_createClass","key","_this$props2","this","prevProps","_this$props3","_Fragment","Preloader","Users","React","compose","withAuthNavigate","connect","actions"],"sourceRoot":""}